<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	<context:component-scan base-package="com.program"></context:component-scan>
	<task:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="50"></property>
		<property name="maxPoolSize" value="50"></property>
		<property name="keepAliveSeconds" value="5"></property>
	</bean>


	<batch:job id="runJob" job-repository="jobRepository">

		<batch:step id="calculatePositiveTax" next="calculateNegativeTax">
			<batch:partition partitioner="refundDetasPartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutor" />
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="calculatePositiveTaxReader"
							processor="calculatePositiveTaxProcessor" writer="calculatePositiveTaxWriter"
							commit-interval="1"></batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>

		<batch:step id="calculateNegativeTax" next="captureRefund">
			<batch:partition partitioner="refundDetasPartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutor" />
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="calculateNegativeTaxReader"
							processor="calculateNegativeTaxProcessor" writer="calculateNegativeTaxWriter"
							commit-interval="1"></batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>

		<batch:step id="captureRefund" next="completePositiveTax">
			<batch:partition partitioner="refundDetasPartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutor" />
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="captureRefundReader" processor="captureRefundProcessor"
							writer="captureRefundWriter" commit-interval="1"></batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>

		<batch:step id="completePositiveTax" next="completeNegativeTax">
			<batch:partition partitioner="refundDetasPartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutor" />
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="completePositiveTaxReader"
							processor="completePositiveTaxProcessor" writer="completePositiveTaxWriter"
							commit-interval="1"></batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>

		<batch:step id="completeNegativeTax" next="auditManager">
			<batch:partition partitioner="refundDetasPartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutor" />
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="completeNegativeTaxReader"
							processor="completeNegativeTaxProcessor" writer="completeNegativeTaxWriter"
							commit-interval="1"></batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>

		<batch:step id="auditManager">
			<batch:partition partitioner="refundDetasPartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutor" />
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="auditManagerReader" processor="auditManagerProcessor"
							writer="auditManagerWriter" commit-interval="1"></batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>

	</batch:job>
</beans>
